import string;

fib(n : int) -> [int] {
    if (n == 0) {
        [];
    }
    else if (n == 1) {
        [0];
    }
    else if (n ==2) {
        [0,1];
    }
    else { 
        arr : [int] = fib(n-1);
        concat(arr,[arr[length(arr)-1] + arr[length(arr)-2]]);
    }
}

fib2(n : int) -> [int] {
    if (n == 0) {
        [];
    }
    else if (n == 1) {
        [0];
    }
    else {
        fibTail(n, [0, 1])
    }
}

fibTail(n: int, pos: int, acc : ref [int]) -> void {
    if (pos < n) {
        acc[pos] := ^acc[pos-2] + ^acc[pos-1]
        fibTail(n-1, pos+1, acc);
    }
}

fibib(n: int) -> [int] {
    fibo(n, ref [], 0);
}

fibo(n: int, arr: ref [int], len: int) -> [int] {
    if (n == 0) {
        ^arr;
    }
    else {
        if (len == 0) {
            refArrayPush(arr, 0);
        }
        else if (len == 1) {
            refArrayPush(arr, 1);
        }
        else {
            refArrayPush(arr, (^arr)[len - 1] + (^arr)[len - 2]);
        }
        fibo(n - 1, arr, len + 1);
    }
}



main() {
    println(fib(10));
	println(fib2(10));
    println(fibib(10));
}